@*//VS jQuery Docs, used only for design time *@
@if (false)
{
    <script src="http://ajax.aspnetcdn.com/ajax/jQuery/jquery-1.7.1-vsdoc.js" type="text/javascript"></script>
}   

@model Suncor.LessonsLearnedMP.Web.ViewData.LessonViewModel
@using Suncor.LessonsLearnedMP.Web.Helpers
@using Suncor.LessonsLearnedMP.Web.Common
@using Suncor.LessonsLearnedMP.Framework

@{
    var applicationContext = new ApplicationContext(Html.GetDistributedCache());
    var userSessionContext = new UserSessionContext(this.ViewContext.HttpContext);
    var userCookieContext = new UserCookieContext(this.ViewContext.HttpContext);
    bool readOnly = !Utils.IsLessonEditable(Html.GetDistributedCache(), Model, userSessionContext.CurrentUser);

    var coordinatorList = applicationContext.Coordinators.Select(x => new
    {
        Id = x.Sid,
        Name = Utils.FormatUserNameForDisplay(x)
    }).ToList();
    
    //Issue 69 - Add the Primary Admin to the LLC List
    coordinatorList.Insert(0, new { Id = Constants.TextDefaults.LLCListPrimaryAdminLabel, Name = Constants.TextDefaults.LLCListPrimaryAdminLabel });

    if (!string.IsNullOrWhiteSpace(Model.CoordinatorOwnerSid) && !coordinatorList.Where(x => x.Id == Model.CoordinatorOwnerSid).Any())
    {
        coordinatorList.Add(new { Id = Model.CoordinatorOwnerSid, Name = Model.Coordinator + " [Disabled]" });
    }

    int longFormHeight = userCookieContext.LongFormViewHeight;
}

<script type="text/javascript">
    var readOnly = @readOnly.ToString().ToLower();
    var themeOtherValue = @applicationContext.Themes.Where(x => x.System && x.Id != 0).FirstOrDefault().Id;
    var selectedLessonId = @Model.Id;
</script>


@Html.Script(Enumerations.Css.JqueryMultiselect)
@Html.Script(Enumerations.JavaScript.JqueryMultiselect)
@Html.Script(Enumerations.JavaScript.LessonsLearnedEdit)

<div id="EditLessonContent" >
    <div class="dark-theme">
        @if (Model.Id > 0)
        {
            <div id="LessonSummary">
                <div class="section ui-widget ui-widget-content ui-corner-all">
                    @if (userSessionContext.CurrentUser.RoleId != (int)Enumerations.Role.User)
                    {
                        <div class="more clickable">
                            <div class="more-label ui-state-highlight ui-corner-all">
                                <span class="more-label-button web-sprite sprite-plus-button"></span>
                                <span class="more-label-text">More...</span>
                            </div>
                        </div>
                    }

                    <div class="section-item first-row first-item quarter-width">
                        <div class="label">
                            <label for='@Html.GetControlId(x => x.Id)'>
                                <span class="float-left helptip" data-helpTopic="@((int)Enumerations.HelpTopic.EditNumber)">Number</span>
                            </label>
                            <div class="clear"></div>
                        </div>
                        <div class="html-control">
                            <span class="float-left">
                                @Model.Id
                            </span>
                            <div class="clear"></div>
                        </div>
                    </div>

                    <div class="section-item first-row quarter-width ui-corner-all">
                        <div class="label">
                            <label for='@Html.GetControlId(x => x.Status)'>
                                <span class="float-left helptip" data-helpTopic="@((int)Enumerations.HelpTopic.EditStatus)">Status</span>
                            </label>
                            <div class="clear"></div>
                        </div>
                        <div class="html-control">
                            <span class="float-left">@applicationContext.LessonStatuses.Where(x => x.Id == (int)Model.Status).First().Name@(Model.Enabled == true ? "" : " (Deleted)")</span>
                            <div class="clear"></div>
                        </div>
                    </div>

                    <div class="section-item first-row quarter-width">
                        <div class="label">
                            <label for='@Html.GetControlId(x => x.CreatedUser)'>
                                <span class="float-left helptip" data-helpTopic="@((int)Enumerations.HelpTopic.EditSubmittedBy)">Submitted By</span>
                            </label>
                            <div class="clear"></div>
                        </div>
                        <div class="html-control">
                            <span class="float-left" style="width:105px">@Model.SubmittedBy</span>
                            <div class="clear"></div>
                        </div>
                    </div>

                    <div class="section-item first-row last-item quarter-width">
                        <div class="label">
                            <label for='@Html.GetControlId(x => x.CreatedDate)'>
                                <span class="float-left helptip" data-helpTopic="@((int)Enumerations.HelpTopic.EditSubmittedDate)">Submitted</span>
                            </label>
                            <div class="clear"></div>
                        </div>
                        <div class="html-control">
                            <span class="float-left">@(Model.SubmittedDate.HasValue ? Model.SubmittedDate.Value.ToShortDateString() : "" )</span>
                            <div class="clear"></div>
                        </div>
                    </div>

                    <div class="more-details">
                        <div class="section-item first-item quarter-width">
                            <div class="label">
                                <label>
                                    <span class="float-left helptip" data-helpTopic="@((int)Enumerations.HelpTopic.EditLessonAge)">Lesson Age</span>
                                </label>
                                <div class="clear"></div>
                            </div>
                            <div class="html-control">
                                <span class="float-left">@Model.LessonAge Day@(Model.LessonAge == 1 ? "" : "s")</span>
                                <div class="clear"></div>
                            </div>
                        </div>

                        <div class="section-item quarter-width">
                            <div class="label">
                                <label>
                                    <span class="float-left helptip" data-helpTopic="@((int)Enumerations.HelpTopic.EditSessionQuarter)">Session Quarter</span>
                                </label>
                                <div class="clear"></div>
                            </div>
                            <div class="html-control">
                                <span class="float-left">@Model.SessionQuarter</span>
                                <div class="clear"></div>
                            </div>
                        </div>

                        <div class="section-item quarter-width">
                            <div class="label">
                                <label>
                                    <span class="float-left">Validated By</span>
                                </label>
                                <div class="clear"></div>
                            </div>
                            <div class="html-control">
                                <span class="float-left" style="width:105px">@Model.ValidatedBy</span>
                                <div class="clear"></div>
                            </div>
                        </div>

                        <div class="section-item last-item quarter-width" style="width:181px;">
                            <div class="label">
                                <label>
                                    <span class="float-left">Closed Date</span>
                                </label>
                                <div class="clear"></div>
                            </div>
                            <div class="html-control">
                                <span class="float-left">@(Model.ClosedDate.HasValue ? Model.ClosedDate.Value.ToShortDateString() : "")</span>
                                <div class="clear"></div>
                            </div>
                        </div>

                        <div class="section-item first-item quarter-width">
                            <div class="label">
                                <label>
                                    <span class="float-left helptip" data-helpTopic="@((int)Enumerations.HelpTopic.EditBPOTransfers)">No. of BPO Transfers</span>
                                </label>
                                <div class="clear"></div>
                            </div>
                            <div class="html-control">
                                <span class="float-left">
                                    @Model.BpoTransfers
                                </span>
                                <div class="clear"></div>
                            </div>
                        </div>

                        <div class="section-item quarter-width">
                            <div class="label">
                                <label>
                                    <span class="float-left helptip" data-helpTopic="@((int)Enumerations.HelpTopic.EditTimesSentBPO)">No. of Times Sent to BPO</span>
                                </label>
                                <div class="clear"></div>
                            </div>
                            <div class="html-control">
                                <span class="float-left">@Model.TimesSentToBpo</span>
                                <div class="clear"></div>
                            </div>
                        </div>

                        <div class="section-item last-item half-width" style="margin-left: 5px;width: 400px;">
                            <div class="label">
                                <label>
                                    <span class="float-left helptip" data-helpTopic="@((int)Enumerations.HelpTopic.EditDateLastSentBPO)">Date Last Sent to BPO</span>
                                </label>
                                <div class="clear"></div>
                            </div>
                            <div class="html-control">
                                <span class="float-left">@Model.LastSentToBpo.ToDisplayDate()</span>
                                <div class="clear"></div>
                            </div>
                        </div>

                        <div class="section-item last-row half-width first-item">
                            <div class="label">
                                <label>
                                    <span class="float-left helptip" data-helpTopic="@((int)Enumerations.HelpTopic.EditTimesSentClarification)">No. of Times Sent for Clarification</span>
                                </label>
                                <div class="clear"></div>
                            </div>
                            <div class="html-control">
                                <span class="float-left">
                                    @Model.TimesSentForClarification
                                </span>
                                <div class="clear"></div>
                            </div>
                        </div>

                        <div class="section-item half-width last-item" style="margin-left: 40px;width: 400px;">
                            <div class="label">
                                <label>
                                    <span class="float-left helptip" data-helpTopic="@((int)Enumerations.HelpTopic.EditDateLastSentClarification)">Date Sent for Last Clarification</span>
                                </label>
                                <div class="clear"></div>
                            </div>
                            <div class="html-control">
                                <span class="float-left">
                                    @Model.LastSentForClarification.ToDisplayDate()
                                </span>
                                <div class="clear"></div>
                            </div>
                        </div>
                    </div>

                    <div class="clear"></div>

                </div>
            </div><!--End LessonSummary-->
        }

        <div id="SectionTitle">
        <div class="section ui-widget ui-widget-content ui-corner-all">
            <div class="section-item first-row first-item full-width">
                <div class="label">
                    <label for='@Html.GetControlId(x => x.Title)'>
                        <span class="float-left helptip" data-helpTopic="@((int)Enumerations.HelpTopic.EditLessonTitle)">Title *</span>
                    </label>
                    <div class="clear"></div>
                </div>
                <div class="html-control">
                    @if (readOnly)
                    {
                        @Html.TextBoxFor(x => x.Title, new { @readonly = "readonly", @class = "ui-widget ui-state-default ui-corner-all ui-state-disabled" })
                    }
                    else
                    {
                        @Html.TextBoxFor(x => x.Title, new { @class = "ui-widget ui-state-default ui-corner-all" })
                    }
                    <div class="clear"></div>
                </div>
            </div>
            
            <div class="clear"></div>

        </div>
    </div><!--End SectionTitle-->
    </div><!-- End dark-theme-->
    <div id="LongFormView" style="max-height:@(longFormHeight - 85)px">
        <div style="position:relative">

            <div class="dark-theme">
                @Html.HiddenFor(x => x.CreatedDate)
                @Html.HiddenFor(x => x.CreatedUser)
                @Html.HiddenFor(x => x.Enabled)
                @Html.HiddenFor(x => x.Id)
                @Html.HiddenFor(x => x.MigrationRecord)
                @Html.HiddenFor(x => x.Status)
                @Html.HiddenFor(x => x.UpdateDate)
                @Html.HiddenFor(x => x.UpdateUser)
                @Html.HiddenFor(x => x.OwnerSid)
                @Html.HiddenFor(x => x.ReturnToAction)

                @if (Model.Status != Enumerations.LessonStatus.Draft && Model.Status != Enumerations.LessonStatus.New)
                {
                    <div>
                        <div class="label header">
                            <label>
                                <span>Validation</span>
                            </label>
                        </div>
        
                        <div class="clear"></div>
                    </div>
        
                    <div id="SectionClosed" class="section-closed">

                        <div class="section ui-widget ui-widget-content ui-corner-all">
                            <table>
                                <thead>
                                    <tr>
                                        <th style="width:102px"></th>
                                        <th style="width:165px"></th>
                                        <th style="width:160px"></th>
                                        <th style="width:470px"></th>
                                    </tr>
                                </thead>

                                <tbody>
                                    <tr>
                                        <td>     
                                            <div class="section-item">                   
                                                <div class="label">
                                                    <label for='@Html.GetControlId(x => x.LocationId)'>
                                                        <span class="float-left helptip" data-helpTopic="@((int)Enumerations.HelpTopic.EditEstimatedCompletion)">Estimated Completion</span>
                                                    </label>
                                                </div>
                                            </div>
                                        </td>
                                        <td>
                                            <div class="section-item">
                                                <div class="html-control">
                                                    @Html.EditorFor(x => x.EstimatedCompletion, new { ReadOnly = readOnly })<span data-controlId="@Html.GetControlId(x => x.EstimatedCompletion)" class="web-sprite sprite-calendar float-left @(readOnly ? "" : "clickable")" style="left: 10px;position: relative;top: 6px;"></span>
                                                    <div class="clear"></div>
                                                </div>
                                            </div>
                                        </td>
                                    </tr>
                    
                                    <tr>
                                        <td>            
                                            <div class="section-item">          
                                                <div class="label">
                                                    <label for='@Html.GetControlId(x => x.ProjectId)'>
                                                        <span class="float-left helptip" data-helpTopic="@((int)Enumerations.HelpTopic.EditResolution)">Resolution *</span>
                                                    </label>
                                                    <div class="clear"></div>
                                                </div>
                                            </div>
                                        </td>
                                        <td colspan="3">
                                            <div class="section-item">  
                                                <div class="html-control" style="width:768px;">
                                                    @if (readOnly)
                                                    {
                                                        @Html.TextAreaFor(x => x.Resolution, new { @class = "ui-widget ui-state-default ui-corner-all ui-state-disabled", @readonly = "readonly" })
                                                    }
                                                    else
                                                    {
                                                        @Html.TextAreaFor(x => x.Resolution, new { @class = "ui-widget ui-state-default ui-corner-all" })
                                                    }
                                                    <div class="clear"></div>
                                                </div>
                                            </div>
                                        </td>
                                    </tr>

                                    <tr>
                                        <td>
                                            <div class="section-item">  
                                                <div class="html-control">
                                                    @if (readOnly)
                                                    {
                                                        @Html.RadioButtonFor(model => model.IsLessonTypeValidSelected, true, new { @class = "radio", disabled = "disabled" })<span class="range-label">Valid</span>
                                                    }
                                                    else
                                                    {
                                                        @Html.RadioButtonFor(model => model.IsLessonTypeValidSelected, true, new { @class = "radio" })<span class="range-label">Valid</span>
                                                    }
                                                </div>
                                            </div>
                                        </td>
                                        <td colspan="3">
                                            <div class="section-item" style="margin-left: 5px;">  
                                                <label for='@Html.GetControlId(x => x.LessonTypeValidId)'>
                                                    <!--<a class="float-left live-link" href="@Utility.SafeGetAppConfigSetting("LiveLinkUrl_LessonType", "http://livelink/ecmlivelinkprd/llisapi.dll?func=ll&objId=101217806&objAction=download")" target="_blank">-->
                                                    <a class="float-left live-link" href="@Utility.SafeGetAppConfigSetting("LiveLinkUrl_LessonType", "http://ecm/ecmlivelinkprd/llisapi.dll/open/80532268")" target="_blank">
                                                        Lesson Type * <span class="web-sprite sprite-help-browser"></span>
                                                    </a>
                                                </label>
                                            </div>
                                        </td>
                                    </tr>

                                    <tr>
                                        <td>
                                            <div class="section-item">  
                                                <div class="html-control">
                                                    @if (readOnly)
                                                    {
                                                        @Html.RadioButtonFor(model => model.IsLessonTypeValidSelected, false, new { @class = "radio", disabled = "disabled" })<span class="range-label">Invalid</span>
                                                    }
                                                    else
                                                    {
                                                        @Html.RadioButtonFor(model => model.IsLessonTypeValidSelected, false, new { @class = "radio" })<span class="range-label">Invalid</span>
                                                    }
                                                </div>
                                            </div>
                                        </td>
                                        <td colspan="3">
                                            <div class="section-item">  
                                                <div class="html-control ddl lesson-type-list">
                                                    @Html.DropDownListFor(x => x.LessonTypeValidId, new SelectList(Utils.ToDisplayList(applicationContext.LessonTypesValid, Model.LessonTypeValidId), "Id", "Name"), "", readOnly ? new { disabled = "disabled" } : null)
                                                    @Html.DropDownListFor(x => x.LessonTypeInvalidId, new SelectList(Utils.ToDisplayList(applicationContext.LessonTypesInvalid, Model.LessonTypeInvalidId), "Id", "Name"), "", readOnly ? new { disabled = "disabled" } : null)
                                
                                                    <div class="clear"></div>
                                                </div>
                                            </div>
                                        </td>
                                    </tr>
                    
                                </tbody>

                            </table>

                            <div class="clear"></div>
                        </div>

                    </div><!--End SectionClosed-->
                }
                else
                {
                    @Html.HiddenFor(x => x.Resolution)
                    @Html.HiddenFor(x => x.LessonTypeValidId)
                    @Html.HiddenFor(x => x.LessonTypeInvalidId)
                    @Html.HiddenFor(x => x.EstimatedCompletion)
                }

                <div>
                    <div class="label header">
                        <label>
                            <span>Lesson Details</span>
                        </label>
                    </div>
        
                    <div class="clear"></div>
                </div>

                <div id="Section2">
                    <div class="section ui-widget ui-widget-content ui-corner-all">
                        <div class="section-item first-row first-item">
                            <div class="label">
                                <label for='@Html.GetControlId(x => x.PhaseId)'>
                                    <span class="float-left helptip" data-helpTopic="@((int)Enumerations.HelpTopic.EditProjectPhase)">Project Phase *</span>
                                </label>
                                <div class="clear"></div>
                            </div>
                            <div class="html-control">
                                @Html.DropDownListFor(x => x.PhaseId,
                                new SelectList(Utils.ToDisplayList(applicationContext.Phases, Model.PhaseId), "Id", "Name", Model.PhaseId), "", readOnly ? new { disabled = "disabled" } : null)
                                <div class="clear"></div>
                            </div>
                        </div>

                        <div class="section-item first-row last-item">
                            <div class="label">
                                <label for='@Html.GetControlId(x => x.ProjectId)'>
                                    <span class="float-left helptip" data-helpTopic="@((int)Enumerations.HelpTopic.EditProjectName)">Project Name *</span>
                                </label>
                                <div class="clear"></div>
                            </div>
                            <div class="html-control">
                                @Html.DropDownListFor(x => x.ProjectId,
                                    new SelectList(Utils.ToDisplayList(applicationContext.Projects, Model.ProjectId), "Id", "Name", Model.ProjectId), "", readOnly ? new { disabled = "disabled" } : null)
                                <div class="clear"></div>
                            </div>
                        </div>

                        <div class="section-item first-item">
                            <div class="label">
                                <label for='@Html.GetControlId(x => x.LocationId)'>
                                    <span class="float-left helptip" data-helpTopic="@((int)Enumerations.HelpTopic.EditLocation)">Location *</span>
                                </label>
                                <div class="clear"></div>
                            </div>
                            <div class="html-control">
                                @Html.DropDownListFor(x => x.LocationId, new SelectList(Utils.ToDisplayList(applicationContext.Locations, Model.LocationId), "Id", "Name", Model.LocationId), "", readOnly ? new { disabled = "disabled" } : null)
                                <div class="clear"></div>
                            </div>
                        </div>

                        <div class="section-item last-item">
                            <div class="label">
                                <label for='@Html.GetControlId(x => x.ClassificationId)'>
                                    <span class="float-left helptip" data-helpTopic="@((int)Enumerations.HelpTopic.EditProjectClassification)">Project Classification *</span>
                                </label>
                                <div class="clear"></div>
                            </div>
                            <div class="html-control">
                                @Html.DropDownListFor(x => x.ClassificationId, new SelectList(Utils.ToDisplayList(applicationContext.Classifications, Model.ClassificationId), "Id", "Name", Model.ClassificationId), "", readOnly ? new { disabled = "disabled" } : null)
                                <div class="clear"></div>
                            </div>
                        </div>

                        <div class="section-item first-item last-row">
                            <div class="label">
                                <label for='@Html.GetControlId(x => x.SessionDate)'>
                                    <span class="float-left helptip" data-helpTopic="@((int)Enumerations.HelpTopic.EditSessionDate)">Session Date *</span>
                                </label>
                                <div class="clear"></div>
                            </div>
                            <div class="html-control">
                                @Html.EditorFor(x => x.SessionDate, new { ReadOnly = readOnly })<span data-controlId="@Html.GetControlId(x => x.SessionDate)" class="web-sprite sprite-calendar @(readOnly ? "" : "clickable")"></span>
                                <div class="clear"></div>
                            </div>
                        </div>

                        <div class="section-item last-row last-item">
                            <div class="label">
                                <label for='@Html.GetControlId(x => x.CoordinatorOwnerSid)'>
                                    <span class="float-left helptip" data-helpTopic="@((int)Enumerations.HelpTopic.EditLLCoordinator)">LL Coordinator *</span>
                                </label>
                                <div class="clear"></div>
                            </div>
                            <div class="html-control">
                                @Html.HiddenFor(x => x.Coordinator)
                                @Html.DropDownListFor(x => x.CoordinatorOwnerSid,
                                    new SelectList(coordinatorList, "Id", "Name", Model.CoordinatorOwnerSid), "", readOnly ? new { disabled = "disabled" } : null)
                                <div class="clear"></div>
                            </div>
                        </div>

                        <div class="clear"></div>
                    </div>

                </div><!--End Section2-->
    
                <div id="Section3">
                    <div class="section ui-widget ui-widget-content ui-corner-all">

                        <div class="section-item first-item">
                            <div class="label">
                                <label for='@Html.GetControlId(x => x.Description)'>
                                    <span class="float-left helptip" data-helpTopic="@((int)Enumerations.HelpTopic.EditDescription)">Description *</span>
                                </label>
                                <div class="clear"></div>
                            </div>
                            <div class="html-control">
                                @if (readOnly)
                                {
                                    @Html.TextAreaFor(x => x.Description, new { @class = "ui-widget ui-state-default ui-corner-all ui-state-disabled", @readonly = "readonly" })
                                }
                                else
                                {
                                    @Html.TextAreaFor(x => x.Description, new { @class = "ui-widget ui-state-default ui-corner-all" })
                                }
                                <div class="clear"></div>
                            </div>
                        </div>

                        <div class="section-item last-item">
                            <div class="label">
                                <label for='@Html.GetControlId(x => x.CausalFactors)'>
                                    <span class="float-left helptip" data-helpTopic="@((int)Enumerations.HelpTopic.EditCausalFactors)">Causal Factors *</span>
                                </label>
                                <div class="clear"></div>
                            </div>
                            <div class="html-control">
                                @if (readOnly)
                                {
                                    @Html.TextAreaFor(x => x.CausalFactors, new { @class = "ui-widget ui-state-default ui-corner-all ui-state-disabled", @readonly = "readonly" })
                                }
                                else
                                {
                                    @Html.TextAreaFor(x => x.CausalFactors, new { @class = "ui-widget ui-state-default ui-corner-all" })
                                }
                                <div class="clear"></div>
                            </div>
                        </div>

                        <div class="section-item first-item">
                            <div class="label">
                                <label for='@Html.GetControlId(x => x.SuggestedAction)'>
                                    <span class="float-left helptip" data-helpTopic="@((int)Enumerations.HelpTopic.EditSuggestedAction)">Suggested Action *</span>
                                </label>
                                <div class="clear"></div>
                            </div>
                            <div class="html-control">
                                @if (readOnly)
                                {
                                    @Html.TextAreaFor(x => x.SuggestedAction, new { @class = "ui-widget ui-state-default ui-corner-all ui-state-disabled", @readonly = "readonly" })
                                }
                                else
                                {
                                    @Html.TextAreaFor(x => x.SuggestedAction, new { @class = "ui-widget ui-state-default ui-corner-all" })
                                }
                                <div class="clear"></div>
                            </div>
                        </div>



                        <div class="section-item last-item">
                            <div class="label">
                                <label for='@Html.GetControlId(x => x.Benefit)'>
                                    <span class="float-left helptip" data-helpTopic="@((int)Enumerations.HelpTopic.EditBenefit)">Benefit *</span>
                                </label>
                                <div class="clear"></div>
                            </div>
                            <div class="html-control">
                                @if (readOnly)
                                {
                                    @Html.TextAreaFor(x => x.Benefit, new { @class = "ui-widget ui-state-default ui-corner-all ui-state-disabled", @readonly = "readonly" })
                                }
                                else
                                {
                                    @Html.TextAreaFor(x => x.Benefit, new { @class = "ui-widget ui-state-default ui-corner-all" })
                                }
                                <div class="clear"></div>
                            </div>
                        </div>

                        <div class="section-item last-row first-item dropdown-half-width">
                            <div class="label">
                                <label for='@Html.GetControlId(x => x.CostImpactId)'>
                                    <span class="float-left helptip" data-helpTopic="@((int)Enumerations.HelpTopic.EditCostImpact)">Cost Impact *</span>
                                </label>
                                <div class="clear"></div>
                            </div>
                            <div class="html-control" style="width:355px;">
                                @Html.DropDownListFor(x => x.CostImpactId, new SelectList(Utils.ToDisplayList(applicationContext.CostImpacts, Model.CostImpactId), "Id", "Name", Model.CostImpactId), "", readOnly ? new { disabled = "disabled" } : null)
                                <div class="clear"></div>
                            </div>
                        </div>

                        <div class="section-item last-row last-item dropdown-half-width">
                            <div class="label float-left">
                                <label for='@Html.GetControlId(x => x.ImpactBenefitRangeId)'>
                                    <span class="float-left helptip" data-helpTopic="@((int)Enumerations.HelpTopic.EditBenefitRange)">Benefit Range *</span>
                                </label>
                                <div class="clear"></div>
                            </div>
                            <div class="html-control" style="width:322px;margin-right:0">
                                @Html.DropDownListFor(x => x.ImpactBenefitRangeId, new SelectList(Utils.ToDisplayList(applicationContext.ImpactBenefitRanges, Model.ImpactBenefitRangeId), "Id", "Name", Model.ImpactBenefitRangeId), "", readOnly ? new { disabled = "disabled" } : null)
                                <div class="clear"></div>
                            </div>
                        </div>

                        <div class="clear"></div>
                    </div>
                </div><!--End Section3-->

                <div id="Section4">
                    <div class="section ui-widget ui-widget-content ui-corner-all">

                        <div class="left-side">
                            <div class="section-item">
                                <div class="label">
                                    <label for='@Html.GetControlId(x => x.DisciplineId)'>
                                        <span class="float-left helptip" data-helpTopic="@((int)Enumerations.HelpTopic.EditDiscipline)">Responsible Discipline *</span>
                                    </label>
                                    <div class="clear"></div>
                                </div>
                                <div class="html-control" style="margin-right:0px; width:266px;">
                                    @if (Model.Status != Enumerations.LessonStatus.Draft)
                                    {
                                        @Html.DropDownList("DisciplineId_DDL", new SelectList(Utils.ToDisplayList(applicationContext.Disciplines, Model.DisciplineId), "Id", "Name", Model.DisciplineId), "", new { disabled = "disabled" })
                                        @Html.HiddenFor(x => x.DisciplineId)
                                    }
                                    else
                                    {
                                        @Html.DropDownListFor(x => x.DisciplineId, new SelectList(Utils.ToDisplayList(applicationContext.Disciplines, Model.DisciplineId), "Id", "Name", Model.DisciplineId), "")
                                    }

                                    <div class="clear"></div>
                                </div>
                            </div>

                            <div class="section-item">
                                <div class="label">
                                    <label for='@Html.GetControlId(x => x.ContactName)'>
                                        <span class="float-left helptip" data-helpTopic="@((int)Enumerations.HelpTopic.EditContact)">Lesson Contact *</span>
                                    </label>
                                    <div class="clear"></div>
                                </div>
                                <div class="html-control">
                                    @if (readOnly)
                                    {
                                        @Html.TextBoxFor(x => x.ContactName, new { @readonly = "readonly", @class = "ui-widget ui-state-default ui-corner-all ui-state-disabled" })
                                    }
                                    else
                                    {
                                        @Html.TextBoxFor(x => x.ContactName, new { @class = "ui-widget ui-state-default ui-corner-all" })
                                    }
                                    <div class="clear"></div>
                                </div>
                            </div>

                            <div class="section-item">
                                <div class="inverse-theme">
                                    <div class="label">
                                        <label for='@Html.GetControlId(x => x.ContactPhone)'>
                                            <span class="float-left">Contact Phone *</span>
                                        </label>
                                        <div class="clear"></div>
                                    </div>
                                    <div class="html-control">
                                        @if (readOnly)
                                        {
                                            @Html.TextBoxFor(x => x.ContactPhone, new { @class = "ui-widget ui-state-default ui-corner-all ui-state-disabled", @readonly = "readonly" })
                                        }
                                        else
                                        {
                                            @Html.TextBoxFor(x => x.ContactPhone, new { @class = "ui-widget ui-state-default ui-corner-all" })
                                        }
                                        <div class="clear"></div>
                                    </div>
                                </div>
                            </div>

                            <div class="section-item">
                                <div class="label">
                                    <label for='@Html.GetControlId(x => x.ContactEmail)'>
                                        <span class="float-left">Contact Email *</span>
                                    </label>
                                    <div class="clear"></div>
                                </div>
                                <div class="html-control">
                                    @if (readOnly)
                                    {
                                        @Html.TextBoxFor(x => x.ContactEmail, new { @class = "ui-widget ui-state-default ui-corner-all ui-state-disabled", @readonly = "readonly" })
                                    }
                                    else
                                    {
                                        @Html.TextBoxFor(x => x.ContactEmail, new { @class = "ui-widget ui-state-default ui-corner-all" })
                                    }
                                    <div class="clear"></div>
                                </div>
                            </div>

                        </div> <!-- End left-side-->

                        <div class="right-side">

                            <div class="section-item">
                                <div class="label">
                                    <label for='@Html.GetControlId(x => x.RiskRankingId)'>
                                        <a class="float-left live-link helptip" href="@Utility.SafeGetAppConfigSetting("LiveLinkUrl_RiskRanking", "http://livelink/ecmlivelinkprd/llisapi.dll/open/79458399")" target="_blank" data-helpTopic="@((int)Enumerations.HelpTopic.EditRiskRanking)">
                                            Risk Ranking * <span class="web-sprite sprite-help-browser"></span>
                                        </a>
                                    </label>
                                    <div class="clear"></div>
                                </div>
                                <div class="html-control">
                                    @if (readOnly)
                                    {
                                        @Html.DropDownListFor(x => x.RiskRankingId, new SelectList(Utils.ToDisplayList(applicationContext.RiskRankings, Model.RiskRankingId), "Id", "Name", Model.RiskRankingId), "", new { @class = "nostyle", disabled = "disabled" })
                                    }
                                    else
                                    {
                                        @Html.DropDownListFor(x => x.RiskRankingId, new SelectList(Utils.ToDisplayList(applicationContext.RiskRankings, Model.RiskRankingId), "Id", "Name", Model.RiskRankingId), "", new { @class = "nostyle" })
                                    }
                    
                                    <div class="clear"></div>
                                </div>
                            </div>

                            <div class="section-item">
                                <div class="label">
                                    <label for='@Html.GetControlId(x => x.ThemeIds)'>
                                        <span class="float-left helptip" data-helpTopic="@((int)Enumerations.HelpTopic.EditThemes)">Lesson Theme(s) *</span>
                                    </label>
                                    <div class="clear"></div>
                                </div>
                                <div class="html-control @(readOnly ? "ui-state-disabled" : "")">
                                    @Html.ListBoxFor(x => x.ThemeIds, Utils.ToSelectList(applicationContext.Themes, Model.ThemeIds), new { @class = "nostyle", multiple = "multiple" })
                                    <div class="clear"></div>
                                </div>
                            </div>

                            <div id="ThemeDescriptionTarget" class="section-item @(Model.ThemeIds.Contains(applicationContext.Themes.Where(x => x.System).FirstOrDefault().Id) ? "" : "display-none")">
                                <div class="label">
                                    <label for='@Html.GetControlId(x => x.ThemeDescription)'>
                                        <span class="float-left">Theme Description *</span>
                                    </label>
                                    <div class="clear"></div>
                                </div>
                                <div class="html-control" style="margin-right: 20px; width: 285px;">
                                    @if (readOnly)
                                    {
                                        @Html.TextAreaFor(x => x.ThemeDescription, new { @class = "ui-widget ui-state-default ui-corner-all ui-state-disabled", style = "height:52px;", @readonly = "readonly" })
                                    }
                                    else
                                    {
                                        @Html.TextAreaFor(x => x.ThemeDescription, new { @class = "ui-widget ui-state-default ui-corner-all", style = "height:52px;" })
                                    }
                                    <div class="clear"></div>
                                </div>
                            </div>

                        </div> <!-- End rightside-->

                        <div class="section-item first-item last-row full-width">
                            <div class="label">
                                <label for='@Html.GetControlId(x => x.CredibilityChecklistId)'>
                                    <a class="float-left live-link helptip" href="@Utility.SafeGetAppConfigSetting("LiveLinkUrl_CredibilityChecklist", "http://livelink/ecmlivelinkprd/llisapi.dll?func=ll&objId=101217806&objAction=download")" target="_blank" data-helpTopic="@((int)Enumerations.HelpTopic.EditCredibilityChecklist)">
                                        Credibility Checklist * <span class="web-sprite sprite-help-browser"></span>
                                    </a>
                                </label>
                                <div class="clear"></div>
                            </div>
                            <div class="html-control" style="margin-right: 0px; width: 728px;">
                                @Html.DropDownListFor(x => x.CredibilityChecklistId, new SelectList(Utils.ToDisplayList(applicationContext.CredibilityChecklists, Model.CredibilityChecklistId), "Id", "Name", Model.CredibilityChecklistId), "", readOnly ? new { disabled = "disabled" } : null)
                                <div class="clear"></div>
                            </div>
                        </div>

                        <div class="section-item first-item last-row full-width">
                            <div class="label" style="width:167px; height:34px">
                                <label for='@Html.GetControlId(x => x.SupportingDocuments)'>
                                    <span class="float-left helptip" data-helpTopic="@((int)Enumerations.HelpTopic.EditSupportingDocuments)">Supporting Documents (Livelink URL Only)</span>
                                </label>
                                <div class="clear"></div>
                            </div>
                            <div class="html-control" style="width: 718px;">
                                @if (readOnly)
                                {
                                    @Html.TextBoxFor(x => x.SupportingDocuments, new { @class = "ui-widget ui-state-default ui-corner-all ui-state-disabled", @readonly = "readonly" })
                                }
                                else
                                {
                                    @Html.TextBoxFor(x => x.SupportingDocuments, new { @class = "ui-widget ui-state-default ui-corner-all" })
                                }
                                <div class="clear"></div>
                            </div>
                        </div>

                        <div class="clear"></div>
                    </div>
                </div><!--End Section4-->
    
                <div id="SectionTransferToBPO" class='display-none'>
                    <div id="SectionTransferToBPOWrapper" class="dark-theme popup-wrapper">
                        <div class="section ui-widget ui-widget-content ui-corner-all">
                            <table>
                                <tr>
                                    <td class="first">
                                        <div class="section-item">
                                            <label for='@Html.GetControlId(x => x.DisciplineId)' style="color:Black">
                                                <span class="float-left helptip" data-helpTopic="@((int)Enumerations.HelpTopic.EditDiscipline)">Responsible Discipline *</span>
                                            </label>
                                        </div>
                                    </td>

                                    <td>
                                        <div class="section-item">
                                            @Html.DropDownListFor(x => x.TransferBpoDisciplineId, new SelectList(Utils.ToDisplayList(applicationContext.Disciplines, Model.TransferBpoDisciplineId), "Id", "Name", Model.TransferBpoDisciplineId), new { @class = "nostyle" })
                                            <span id="TransferBpoDisciplineId_validationMessage" class="field-validation-valid">Discipline is Required.</span>
                                        </div>
                                    </td>
                                </tr>

                                <tr>
                                    <td class="first">
                                        <div class="section-item">
                                            <label for='@Html.GetControlId(x => x.TransferBpoComment)' style="color:Black">
                                                <span class="float-left">Transfer Comments *</span>
                                            </label>
                                        </div>
                                    </td>

                                    <td>
                                        <div class="section-item text">
                                            @Html.TextAreaFor(x => x.TransferBpoComment, new { @class = "" })
                                            <span id="TransferBpoComment_validationMessage" class="field-validation-valid">Comment is Required.</span>
                                        </div>
                                    </td>
                                </tr>
                            </table>

                            <div class="clear"></div>
                        </div>
                    </div>
                </div><!--End SectionTransferToBPO-->

                <div id="SectionRequiresClarification" class='display-none'>
                    <div id="SectionRequiresClarificationWrapper" class="dark-theme popup-wrapper">
                        <div class="section ui-widget ui-widget-content ui-corner-all">
                            <table>
                                <tr>
                                    <td class="first">
                                        <div class="section-item">
                                            <label for='@Html.GetControlId(x => x.ClarificationComment)' style="color:Black">
                                                <span class="float-left">Clarification Comments *</span>
                                            </label>
                                        </div>
                                    </td>

                                    <td>
                                        <div class="section-item text">
                                            @Html.TextAreaFor(x => x.ClarificationComment, new { @class = "" })
                                            <span id="ClarificationComment_validationMessage" class="field-validation-valid">Comment is Required.</span>
                                        </div>
                                    </td>
                                </tr>
                            </table>

                            <div class="clear"></div>
                        </div>
                    </div>
                </div><!--End SectionRequiresClarification-->

                <div id="SectionAssignToUser" class='display-none'>
                    <div id="SectionAssignToUserWrapper" class="dark-theme popup-wrapper">
                        <div class="section ui-widget ui-widget-content ui-corner-all">
                            <table>
                                <tr>
                                    <td class="first">
                                        <div class="section-item">
                                            <label for='@Html.GetControlId(x => x.AssignToUserId)' style="color:Black">
                                                <span class="float-left">Assign to User *</span>
                                            </label>
                                        </div>
                                    </td>

                                    <td>
                                        <div class="section-item text">
                                             @Html.DropDownListFor(x => x.AssignToUserId, new SelectList(Utils.ToDisplayList(applicationContext.AllUsers.Where(x => x.DisciplineId == userSessionContext.CurrentUser.DisciplineId).ToList(), false, false), "Name", "Name"), new { @class = "nostyle popup" })
                                            <span id="AssignToUser_validationMessage" class="field-validation-valid">Please select a user to assign these lessons to.</span>
                                        </div>
                                    </td>
                                </tr>
                            </table>

                            <div class="clear"></div>
                        </div>
                    </div>
                </div><!--End SectionAssignToUser-->
                @if (Model.Status != Enumerations.LessonStatus.Closed)
                {
                    <div id="SectionClosedPopup" class='section-closed-popup display-none'>
                        <div id="SectionClosedPopupWrapper" class="section-closed-popup-wrapper dark-theme popup-wrapper">
                            <div class="section ui-widget ui-widget-content ui-corner-all">
                                <table>
                                    <tr>
                                        <td class="first">
                                            <div class="section-item">
                                                <label for='@Html.GetControlId(x => x.CloseLessonTypeValidId)'>
                                                    <!--<a class="float-left live-link" href="@Utility.SafeGetAppConfigSetting("LiveLinkUrl_LessonType", "http://livelink/ecmlivelinkprd/llisapi.dll?func=ll&objId=101217806&objAction=download")" target="_blank">-->
                                                    <a class="float-left live-link" href="@Utility.SafeGetAppConfigSetting("LiveLinkUrl_LessonType", "http://ecm/ecmlivelinkprd/llisapi.dll/open/80532268")" target="_blank">
                                                        Lesson Type * <span class="web-sprite sprite-help-browser"></span>
                                                    </a>
                                                </label>
                                            </div>
                                        </td>

                                        <td>
                                            <div class="section-item">
                                                <span class="range-label">Valid</span>@Html.RadioButtonFor(model => model.CloseIsLessonTypeValidSelected, true, new { @class = "radio" })
                                                <span class="range-label">Invalid</span>@Html.RadioButtonFor(model => model.CloseIsLessonTypeValidSelected, false, new { @class = "radio" })
                                                <div class="float-left" style="width:220px;">
                                                    @Html.DropDownListFor(x => x.CloseLessonTypeValidId, new SelectList(Utils.ToDisplayList(applicationContext.LessonTypesValid, Model.CloseLessonTypeValidId), "Id", "Name"), "", new { @class = "nostyle" })
                                                    @Html.DropDownListFor(x => x.CloseLessonTypeInvalidId, new SelectList(Utils.ToDisplayList(applicationContext.LessonTypesInvalid, Model.CloseLessonTypeInvalidId), "Id", "Name"), "", new { @class = "nostyle display-none" })
                                                </div>
                                                <span id="CloseLessonTypeId_validationMessage" class="field-validation-valid">Lesson Type is Required.</span>
                                            </div>
                                        </td>
                                    </tr>

                                    <tr>
                                        <td class="first">
                                            <div class="section-item">
                                                <label for='@Html.GetControlId(x => x.CloseResolution)'>
                                                    <span class="float-left helptip" data-helpTopic="@((int)Enumerations.HelpTopic.EditResolution)">Resolution *</span>
                                                </label>
                                            </div>
                                        </td>

                                        <td>
                                            <div class="section-item text">
                                                @Html.TextAreaFor(x => x.CloseResolution, new { @class = "ui-widget ui-state-default ui-corner-all" })
                                                <span id="CloseResolution_validationMessage" class="field-validation-valid">Resolution is Required.</span>
                                            </div>
                                        </td>
                                    </tr>

                                    <tr>
                                        <td class="first">
                                            <div class="section-item">
                                                <label for='@Html.GetControlId(x => x.CloseComment)'>
                                                    <span class="float-left">Validation Comments</span>
                                                </label>
                                            </div>
                                        </td>

                                        <td>
                                            <div class="section-item text">
                                                @Html.TextAreaFor(x => x.CloseComment, new { @class = "ui-widget ui-state-default ui-corner-all" })
                                            </div>
                                        </td>
                                    </tr>

                                </table>

                                <div class="clear"></div>
                            </div>
                        </div>
                    </div><!--End SectionClosedPopup-->
                }

            </div><!-- End dark-theme-->

            @if (Model.Status != Enumerations.LessonStatus.Draft && Model.Status != Enumerations.LessonStatus.New)
            {
                <div>
                    <div class="label header">
                        <label>
                            <span>Comments</span>
                        </label>
                    </div>
        
                    <div class="clear"></div>
                </div>
                
                <div id="CommentsSection">
                    <div id="CommentGrid" class="ui-widget ui-widget-content ui-corner-top">
                        <div>
                            <table id="CommentList" data-lessonId="@Model.Id">
                                <thead>
                                    <tr>
                                        <th>Enabled</th>
                                        <th>Id</th>
                                        <th>Date</th>
                                        <th>User</th>
                                        <th>Type</th>
                                        <th>Comment</th>
                                        <th>Actions</th>
                                    </tr>
                                </thead>
                                    <tbody> 
                                    </tbody>
                            </table>
                        </div>
                    </div>
                </div> <!--End CommentsSection-->
            }
        </div> <!-- End LongFormView Position Shim -->
    </div> <!--End LongFormView-->
</div> <!--End EditLessonContent -->

&nbsp;